/**
 * Unified wrapper for Jquery drag & drop
 *
 */


function content() {

    var a = 1;
    this.bind = '';

    this.set = function (r) {

        a = r;
    };

    this.get = function () {

       return a;
    };
}

function menu(content, sub, bind = '') {

    this.bind = bind;
    this.sub = sub;

    this.toString = function () {

        return content;
    }
}

function items(content, bind = '') {

    this.bind = bind;

    this.toString = function () {

        return content;
    }
}


function DDElement(attributes = {}, $binds = [], inner = '', tag = 'div')  {

    this.inner = inner;
    this.tag = tag;
    var binds = [];



    // this.bind(this.constructor.identifier());

    this.bind = function(...classes) {

            binds.push(...classes);
            this.attribute('class').push(...classes);

    };


    this.attribute = function(name) {

        if(!(name in attributes)) {

            attributes[name] = [];
        }

        return attributes[name];
    };

    this.toString = function () {

        var array = [];


        for (var key in attributes) {

            var v = attributes[key].join(' ');

            array.push(`${key}="${v}"`);
        }

        var attribute = array.join(' ');


        console.log(this);
        return `<${this.tag} ${attribute}>${this.inner}</${this.tag}>`;
    };

    if($binds.length > 0) {

        this.bind(...$binds);
    }
}


function DDContainer() {

    this.content = new DDElement();
    this.item = {

    }
}

const DD = new function () {

    var content = 'DDContent';
    var panel = 'DDPanel';

    var structure = {};

    this.set = function (name, object) {

        structure[name] = object;
    };


    this.init = function (selector) {

        selector = $(selector);

        selector.append((new DDElement({},[panel])).toString());
        selector.append((new DDElement({},[content])).toString());
    };


    this.panel = function() {

        for(var key in structure) {

            if('item' in structure[key]) {


            }
        }

    };


};
